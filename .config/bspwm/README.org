#+TITLE:BSPWM Configuration
#+AUTHOR: valentin
#+PROPERTY: header-args :tangle bspwmrc :shebang "#!/bin/bash"
* Startup Programs

Lock screen after 10 min. Use slock as lockscreen
#+begin_src bash
xset s 600 &
xss-lock -- slock &
#+end_src

Speed xrate up
#+BEGIN_SRC  bash
xset r rate 300 50 &
#+END_SRC
Hide mouse when idle
#+BEGIN_SRC bash
unclutter &
#+END_SRC
Launch simple x-hotkey daemon
#+BEGIN_SRC bash
sxhkd &
#+END_SRC
Launch Polybar
#+BEGIN_SRC bash
~/.config/polybar/launch.sh
#+END_SRC
Set wallpaper to sth random
#+BEGIN_SRC bash
feh --bg-fill --randomize ~/Pictures/wallpaper &
#+END_SRC
Start nextcloud
#+BEGIN_SRC bash
nextcloud &
#+END_SRC
Screenshot Tool
#+BEGIN_SRC bash
flameshot &
#+END_SRC
Start notification daemon
#+BEGIN_SRC bash
dunst &
#+END_SRC
Start Network Manager
#+BEGIN_SRC bash
nm-applet &
#+END_SRC
Launch emacs daemon
#+BEGIN_SRC bash
emacs --daemon &
#+END_SRC

#+BEGIN_SRC bash
picom &
#+END_SRC


* Look and Feel

My Polybar needs top space
#+BEGIN_SRC bash
bspc config top_padding 25
#+END_SRC

* Monitors
Get connected monitors
#+BEGIN_SRC bash
export MONITOR=$(xrandr -q | grep primary | cut -d' ' -f1)
export MONITORS=($(xrandr -q | grep ' connected' | cut -d' ' -f1) )
MONITOR=${MONITOR:-${MONITORS[0]}}
#+END_SRC
Only have workspaces for primary monitor
#+BEGIN_SRC bash
bspc monitor $MONITOR -d {web,term,chat,code,music}
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
#+END_SRC
* Rules

#+BEGIN_SRC bash
bspc rule -r '*'
#+END_SRC

** Emacs

#+BEGIN_SRC bash
bspc rule -a Emacs split_ratio=0.28 state=tiled
bspc rule -a 'Emacs:org*' state=floating
bspc rule -a 'Emacs:scratch' state=floating
bspc rule -a '*:scratch' state=floating sticky=on center=on border=off rectangle=1000x800+0+0
#+END_SRC

** Pinentry

#+BEGIN_SRC bash
bspc rule -a Pinentry state=floating center=on
#+END_SRC

** Firefox

#+BEGIN_SRC bash
bspc rule -a Firefox split_ratio=0.32
#+END_SRC

** Feh

#+BEGIN_SRC bash
bspc rule -a feh state=fullscreen
#+END_SRC

* For outsourcing

#+BEGIN_SRC bash :tangle no
mkdir rc.d
#+END_SRC

#+RESULTS:

#+BEGIN_SRC bash
for file in $XDG_CONFIG_HOME/bspwm/rc.d/*; do
  source "$file"
done
#+END_SRC

** Outsourced scripts

*** Colorsettings
:PROPERTIES:
:header-args: :tangle rc.d/color :shebang "#!/bin/bash"
:END:

Der Rand ist 4 Pixel gross
#+BEGIN_SRC bash
bspc config border_width 3
#+END_SRC

Normalerweise sind Fenster durch einen lilanen rand gekennzeichnet
#+BEGIN_SRC bash
bspc config normal_border_color "#202236"
#+END_SRC

Aktive Fenster sind gruen
#+BEGIN_SRC bash
bspc config active_border_color "#81A9FE"
#+END_SRC


Selektierte Fenster sind gelb
#+BEGIN_SRC bash
bspc config focused_border_color "#Bf98FE"
#+END_SRC

Programme die eine nachricht gesendet haben sind rot
#+BEGIN_SRC bash
bspc config urgent_border_color "#FE747E"
#+END_SRC
#+BEGIN_SRC bash
bspc config presel_feedback_color "#434972"
#+END_SRC

*** Split ratio
:PROPERTIES:
:header-args: :tangle rc.d/split :shebang "#!/bin/bash"
:END:

#+BEGIN_SRC bash
bspc config split_ratio 0.52
#+END_SRC


# Local Variables:
# eval: (add-hook 'after-save-hook (lambda () (org-babel-tangle)) nil t)
# End:
